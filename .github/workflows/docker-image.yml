name: Build, Scan, and Deploy Image

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'

jobs:
  # SonarqubeScan:
  #   name: Sonarqube Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0  # Disable shallow clones for better analysis
  #     - name: Sonarqube Scan
  #       uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #     # Optionally fail the job if the Quality Gate fails
  #     - name: Sonarqube Quality Gate
  #       uses: sonarsource/sonarqube-quality-gate-action@master
  #       timeout-minutes: 5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  BuildImage:
    if: contains(github.event.head_commit.message, 'BUILD')
    #needs: SonarqubeScan
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: rusty-actions/dockerfile-linter@v1
        with:
          dockerfile: app/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME_INFI }}
          password: ${{ secrets.DOCKERHUB_TOKEN_INFI }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          platforms: linux/arm64,linux/amd64
          context: "app"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME_INFI }}/webapp:latest

  DeployImage:
    needs: BuildImage
    runs-on: self-hosted
    steps:
      - name: Trigger App Deployment from Ansible repo
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: bithost
          repo: school_ansible
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN_GH_INFI }}
          github_user: bithost
          workflow_file_name: ansible-manual-deploy.yml
          ref: main
          wait_interval: 10
          client_payload: '{}'
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
